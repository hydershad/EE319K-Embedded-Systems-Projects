;****************** main.s ***************
; Program written by: HYDER SHAD, MIRA SENGAL
; Date Created: 1/22/2016 
; Last Modified: 2/8/2016 
; Section THURSDAY 2-3 PM
; Instructor: V. JANAPA
; Lab number: 3
; Brief description of the program
;   If the switch is presses, the LED toggles at 8 Hz
; Hardware connections
;  PE1 is switch input  (1 means pressed, 0 means not pressed)
;  PE0 is LED output (1 activates external LED on protoboard) 
;Overall functionality of this system is the similar to Lab 2, with six changes:
;1-  the pin to which we connect the switch is moved to PE1, 
;2-  you will have to remove the PUR initialization because pull up is no longer needed. 
;3-  the pin to which we connect the LED is moved to PE0, 
;4-  the switch is changed from negative to positive logic, and 
;5-  you should increase the delay so it flashes about 8 Hz.
;6-  the LED should be on when the switch is not pressed
; Operation
;   1) Make PE0 an output and make PE1 an input. 
;   2) The system starts with the LED on (make PE0 =1). 
;   3) Wait about 62 ms
;   4) If the switch is pressed (PE1 is 1), then toggle the LED once, else turn the LED on. 
;   5) Steps 3 and 4 are repeated over and over

GPIO_PORTE_DATA_R       EQU   0x400243FC
GPIO_PORTE_DIR_R        EQU   0x40024400
GPIO_PORTE_AFSEL_R      EQU   0x40024420
GPIO_PORTE_DEN_R        EQU   0x4002451C
GPIO_PORTE_AMSEL_R      EQU   0x40024528
GPIO_PORTE_PCTL_R       EQU   0x4002452C
SYSCTL_RCGCGPIO_R       EQU   0x400FE608
countdown EQU 992000 ; how many times delay routine must be executed to achieve 62 ms delay running on 80 MHz clock
       IMPORT  TExaS_Init
       AREA    |.text|, CODE, READONLY, ALIGN=2
       THUMB
       EXPORT  Start

;--------------------------------------------------------------------------------------------------------------

INITIALIZE

; 1) activate clock for Port E
    LDR R0, =SYSCTL_RCGCGPIO_R      
    LDR R1, [R0]                    
    ORR R1, #0X10						;SET BIT 4 HIGH TO ENABLE PORT E CLOCK	
    STR R1, [R0]                    
    NOP
    NOP                             	;ALLOW TIME TO FINISH ACTIVATING (2+ CYCLES)
    NOP

; 2) set direction register
	
	LDR R0, =GPIO_PORTE_DIR_R      		;SET BIT 3 HIGH FOR  TO BE OUTPUT
	LDR R1, [R0]
	ORR R1, #0X01						;using pin PE0 as output, PE1 as input
	STR R1, [R0]
	
; 3) disable analog functionality
    
	LDR R0, =GPIO_PORTE_AMSEL_R     	;DISABLE ANALOG CAPABILITIES, SOLEY DIGITAL I/O
    MOV R1, #0X0
    STR R1, [R0]                      
   
; 4) configure as GPIO
    
	LDR R0, =GPIO_PORTE_PCTL_R              
    MOV R1, #0X0             			;CLEAR PORT CONTROL FIELD TO SET UP PINS FOR GPIO
    STR R1, [R0]                   
	
; 5) regular port function
    
	LDR R0, =GPIO_PORTE_AFSEL_R     	;DISABLE ALT FUNCTIONS FOR BIN BY SETTING BITS TO ZERO
    MOV R1, #0               
    STR R1, [R0]
	
; 6) enable digital port

	LDR R0, =GPIO_PORTE_DEN_R       	;R1 = &GPIO_PORTD_DEN_R
    ORR R1, #0X03               		;ENABLE DIGITAL I/O ON PINS 0 and 1
    STR R1, [R0]

; 7) exit initialization process
	
	BX LR

;----------------------------------------------------------------------------------------------------------------

Start	BL INITIALIZE ; you initialize PE1 PE0

		; TExaS_Init sets bus clock at 80 MHz
		BL  TExaS_Init ; voltmeter, scope on PD3
		CPSIE  I    ; TExaS voltmeter, scope runs on interrupts

		LDR R0, =GPIO_PORTE_DATA_R 		;load R0 with address of Port E data (memory mapped I/O)
		LDR R1, [R0] 					;load Port E data into R1		
		ORR R1, #0X01					;set bit 0 (PE0) HIGH to turn on LED (positive logic)	
		STR R1, [R0]					;write modified data back to memory mapped I/O
		
loop	LDR R1, [R0]					;load data into R0	
		CMP R1, #0X03					;check to see if the switch has been pressed, bit 1 HIGH means pressed, toggle led
		BNE loop						;if switch pressed 	
		EOR R1, #0X01					;EOR to turn off LED since always on	
		STR R1, [R0]					;write modified data back to memory mapped I/O to turn LED off
		BL delay						;execute delay subroutine, return using link register
		ORR R1, #0X01					;ORR to set bit 0 (PE0) HIGH, turn LED on
		STR R1, [R0]					;write modified data back to memory mapped I/O	
		BL delay						;execute delay subroutine, return using link register	
		B loop							;loop to check for switch press	
		
delay	LDR R8, =countdown				;time delay, count down from calculated value for 80 MHz Clock, with delay taking 5 cycles each time					
count	ADD R8, #-1						;subtract 1 from countdown					
		CMP R8, #0						;compare to see if countdown has reached 0
		BNE count						;countdown = 0, then exit delay subroutine, otherwise loop to count
exit	BX LR							;exit delay subroutine, use link register to return to main program code

;----------------------------------------------------------------------------------------------------------------------------

	ALIGN      ; make sure the end of this section is aligned
    END        ; end of file       